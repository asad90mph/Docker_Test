#name: Publish Docker Image to Docker Hub and Deploy to EC2
#
#on:
#  push:
#    branches: ['master']
#  pull_request:
#    branches: ['master']
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/docker_test
#
#  deploy:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Connect to EC2
#        run: |
#          sudo apt-get update
#          mkdir -p ~/.ssh/
#          echo "${{ secrets.EC2_SSH }}" > ~/.ssh/security.pem
#          chmod 400 ~/.ssh/security.pem
#          ssh -T -o StrictHostKeyChecking=no -i ~/.ssh/security.pem ec2-user@13.48.104.136
#          ls -l
#          curl ifconfig.me
#          # pwd && cd /home/ec2-user/docker_test
#          # git pull origin master
#          # sudo docker-compose build
#          # sudo docker-compose up
name: Docker Build and EC2 Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

#    - name: Build Docker image
#      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/docker_test

    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Log in to Docker Hub
    #   run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_ec2-user }} --password-stdin

    # - name: Push Docker image to Docker Hub
    #   run: docker push myimage

  deploy:
    needs: build

    runs-on: ubuntu-latest

    steps:
    - name: Configure SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@13.48.104.136 'ls -l && cd docker_test && ls -l'
        # ssh -i ~/.ssh/id_rsa ec2-user@13.48.104.136 'docker stop mycontainer || true'
        # ssh -i ~/.ssh/id_rsa ec2-user@13.48.104.136 'docker rm mycontainer || true'
        # ssh -i ~/.ssh/id_rsa ec2-user@13.48.104.136 'docker run -d --name mycontainer -p 80:80 myimage:latest'
