#name: Publish Docker Image to Docker Hub
#
#on:
#  push:
#    branches: ['master']
#  pull_request:
#    branches: ['master']
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/docker_test
#
#      - name: Docker Push
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/docker_test
#  deploy:
#      runs-on: ubuntu-latest
#      steps:
#        - name: Install AWS CLI
#          run: |
#            sudo apt-get update
#            sudo apt-get install -y awscli
#
#        - name: Deploy Docker image to EC2
#          run: |
#            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
#            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#            aws configure set default.region ${{ secrets.AWS_REGION }}
#            aws configure set default.output json
##            docker pull ${{ secrets.DOCKER_USERNAME }}/docker_test
#            docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/docker_test

name: Publish Docker Image to Docker Hub and Deploy to EC2

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/docker_test
#
#      - name: Docker Push
#        run: |
##          docker-compose build
#          docker push ${{ secrets.DOCKER_USERNAME }}/docker_test
#      - name: Generate SSH key pair
#        run: |
#            ssh-keygen -t rsa -b 4096 -N "" -f ~/.ssh/workflow_key
#            eval "$(ssh-agent -s)"
#            ssh-add ~/.ssh/workflow_key
  deploy:
      runs-on: ubuntu-latest
      steps:
        - name: connect to EC2
          run: |
             echo "$EC2_SSH"
             echo "$EC2_SSH" > server.pem && chmod 400 server.pem && cat server.pem
             ssh -o StrictHostKeyChecking=no -i server.pem ec2-user@13.48.104.136
#            pwd && ls -l

#      - name: Push Docker Compose to EC2 instance
#        run: |
#            scp -i ~/.ssh/workflow_key docker-compose.yml ec2-user@13.48.104.136:~/docker-compose.yml
#            ssh -i ~/.ssh/workflow_key ec2-user@13.48.104.136 'docker-compose -f ~/docker-compose.yml up -d'
#      - name: Install AWS CLI
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y awscli
#
#      - name: Deploy Docker image to EC2
#        run: |
#          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY }}
#          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws configure set default.region ${{ secrets.AWS_REGION }}
#          aws configure set default.output json
#          docker-compose pull
#          docker-compose up -d



